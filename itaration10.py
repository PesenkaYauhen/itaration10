#Найдите суммарное число инверсий у всех перестановок.

#Пример: для n = 3  существует 6 перестановок: (1, 2, 3); (1, 3, 2); (2, 1, 3); (2, 3, 1); (3, 1, 2); (3, 2, 1)
#Количество инверсий в них: 0, 1, 1, 2, 2, 3 соответственно.

import itertools

n = 0

m = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] # здесь можно задать длинну последовательности символов
x = list(itertools.permutations(m)) # создаем список возможных вариантов перестановки

print('dlinna', len(x))
for i in range(0, len(x)):  # 3628800 вариантов перестановки для последовательности от 1 до 10
    for j in range(0, len(m) - 1):
        # for r in range(len(m) -1- j):
        # print(j)
        q = 1
        while j + q < len(m):
            # print(x[i][j])
            if x[i][j] > x[i][j + q]:
                n += 1
                # print(n)
            q += 1

print("iteracii", n)
#n = 81648000 вариантов перестановки для последовательности от 1 до 10